<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ezen.myProject.repository.BoardDAO">	<!-- dao 안쓰고 repository 값 여기서 전처리 -->
	<insert id="insertBoard" parameterType="com.ezen.myProject.domain.BoardVO">
		insert into board(title,writer,content)
		values (#{title},#{writer},#{content})
	</insert>
	<select id="selectBoardList" resultType="com.ezen.myProject.domain.BoardVO">
		select * from board where isDel="N"	
	</select>
	<select id="selectBoardDetail" resultType="com.ezen.myProject.domain.BoardVO">
		select * from board where bno=#{bno}	
	</select>
	<update id="readCount">
		update board set read_count = read_count +1 where bno=#{bno}
	</update>
	<update id="updateBoard">
		update board set title=#{title}, content=#{content} where bno=#{bno}	<!-- 사용자 일치 경우만 수정가능 -->
	</update>
	<delete id="deleteBoard" parameterType="int" >	<!-- 아예 삭제하는 방식 -->
		delete from board where bno = #{bno}
	</delete>
	<!-- <update id="deleteBoard" parameterType="int" >	isDel을 이용하는 방식
		update board set isDel="Y" where bno = #{bno}
	</update> -->
	
	<!-- 원래 paging  -->
	<!-- <select id="selectBoardListPaging" resultType="com.ezen.myProject.domain.BoardVO">
		select * from board where isDel="N" order by bno desc limit #{pageStart}, #{qty}
		order by bno desc 쓰면 역정렬
	</select> -->
	
	<select id="selectBoardListPaging" resultType="com.ezen.myProject.domain.BoardVO">
		select * from board where isDel="N" 
		<include refid="search"></include>
		order by bno desc limit #{pageStart}, #{qty}
		<!-- order by bno desc 쓰면 역정렬 -->
	</select>
	
	<select id="selectTotalCount" resultType="int" >
		select count(bno) from board where isDel="N"
		<include refid="search"></include>
	</select>
	<select id="selectOneBno" resultType="int" >
		select max(bno) from board
	</select>
	<!-- from board 매번 붙여쓰기 귀찮 -->
	<!-- servlet-context.xml line 19 도 이와 같은 방식 -->
	<sql id="search">
		<if test="type != null">
			<trim prefix="and (" suffix=")" prefixOverrides="OR">
				<foreach collection="typeToArray" item="type">
					<trim prefix="OR">
						<choose>
							<when test="type == 't'.toString()">
								title like concat('%',#{keyword},'%')	<!-- 문자열 연결함수 사용 -->
							</when>
							<when test="type == 'c'.toString()">
								content like concat('%',#{keyword},'%')	
							</when>
							<when test="type == 'w'.toString()">
								writer like concat('%',#{keyword},'%')	
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql>
</mapper>